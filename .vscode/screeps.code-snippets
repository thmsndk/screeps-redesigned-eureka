{
  // Place your Screeps workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, ${2:creepRune} for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"${2:creepRune}"
  // 	],
  // 	"description": "Log output to console"
  // }

  "process": {
    "scope": "javascript,typescript",
    "prefix": ["pg"],
    "body": [
      "import { ProcessContext, ProcessGeneratorResult, YieldAction, kernel } from \"../Kernel\";",
      "",
      "kernel.registerProcess(\"${TM_FILENAME_BASE}\", ${TM_FILENAME_BASE/(.+)/${1:/camelcase}/});",
      "",
      "function* ${TM_FILENAME_BASE/(.+)/${1:/camelcase}/}<T extends any[]>(context: ProcessContext<T>): ProcessGeneratorResult {",
      "  // never ending process",
      "  while (true) {",
      "    yield YieldAction.NEXT_TICK;",
      "  }",
      "}"
    ],
    "description": "generate a new empty process"
  },

  "process generator function": {
    "scope": "javascript,typescript",
    "prefix": ["pf"],
    "body": [
      "function* ${2:name}<T extends any[]>(context: ProcessContext<T>): ProcessGeneratorResult {",
      "  while (true) {",
      "    yield YieldAction.NEXT_TICK;",
      "  }",
      "}"
    ],
    "description": "generate a new empty process"
  }
}
